C51 COMPILER V9.60.7.0   MAIN                                                              03/22/2024 13:29:47 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          // 例程中单片机晶振采用11.0592MHz，
   2          // 但是我们的电路板上的晶振用的是6MHz，
   3          // 所以整首音乐的音准不对，
   4          // 要改正常的话，需修改FREQH[]和FREQL[]数组里的值
   5          #include <reg51.h>
   6          sbit speaker = P3 ^ 6;
   7          sbit P3_7 = P3 ^ 7;
   8          
   9          unsigned char timer0h, timer0l, time;
  10          //--------------------------------------
  11          // 频率-半周期数据表 高八位     本软件共保存了四个八度的28个频率数据
  12          code unsigned char FREQH[] = {
  13              0xF2, 0xF3, 0xF5, 0xF5, 0xF6, 0xF7, 0xF8,       // 低音1234567
  14              0xF9, 0xF9, 0xFA, 0xFA, 0xFB, 0xFB, 0xFC, 0xFC, // 1,2,3,4,5,6,7,i
  15              0xFC, 0xFD, 0xFD, 0xFD, 0xFD, 0xFE,             // 高音 234567
  16              0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFF};      // 超高音 1234567
  17          // 频率-半周期数据表 低八位
  18          code unsigned char FREQL[] = {
  19              0x42, 0xC1, 0x17, 0xB6, 0xD0, 0xD1, 0xB6,       // 低音1234567
  20              0x21, 0xE1, 0x8C, 0xD8, 0x68, 0xE9, 0x5B, 0x8F, // 1,2,3,4,5,6,7,i
  21              0xEE, 0x44, 0x6B, 0xB4, 0xF4, 0x2D,             // 高音 234567
  22              0x47, 0x77, 0xA2, 0xB6, 0xDA, 0xFA, 0x16};      // 超高音 1234567
  23          //--------------------------------------
  24          // 世上只有妈妈好数据表           要想演奏不同的乐曲, 只需要修改这个数据表
  25          code unsigned char east_red[] = {
  26              // 一个音符有三个数字。前为第几个音、中为第几个八度、后为时长（以半拍为单位）。
  27              // 6, 2, 3 分别代表：６, 中音, ３个半拍;
  28              // 5, 2, 1 分别代表：５, 中音, １个半拍;
  29              // 3, 2, 2 分别代表：３, 中音, ２个半拍;
  30              // 5, 2, 2 分别代表：５, 中音, ２个半拍;
  31              // 1, 3, 2 分别代表：１, 高音, ２个半拍;
  32              //
  33              // 东方红
  34              5, 2, 2, // 东
  35              5, 2, 1, // 方
  36              6, 2, 1,
  37              2, 2, 4, // 红
  38          
  39              1, 2, 2, // 太
  40              1, 2, 1, // 阳
  41              6, 1, 1,
  42              2, 2, 4, // 升
  43          
  44              5, 2, 2, // 中
  45              5, 2, 2, // 国
  46              6, 2, 1, // 出
  47              1, 3, 1,
  48              6, 2, 1, // 了
  49              5, 2, 1, // 个
  50              1, 2, 2, // 毛
  51              1, 2, 1, // 泽
  52              6, 1, 1,
  53              2, 2, 4, // 东
  54          
  55              5, 2, 2, // 他
C51 COMPILER V9.60.7.0   MAIN                                                              03/22/2024 13:29:47 PAGE 2   

  56              2, 2, 2, // 为
  57              1, 2, 2, // 人
  58              7, 1, 1, // 民
  59              6, 1, 1,
  60              5, 1, 2, // 谋
  61              5, 2, 2, // 幸
  62              2, 2, 2, // 福
  63              3, 2, 1,
  64              2, 2, 1,
  65              1, 2, 3,
  66              6, 1, 1,
  67              2, 2, 1, // 他
  68              3, 2, 1, // 是
  69              2, 2, 1, // 人
  70              1, 2, 2, // 民
  71              2, 2, 1, // 大
  72              1, 2, 2,
  73              7, 1, 1, // 救
  74              6, 1, 1, //
  75              5, 1, 6, // 星
  76          };
  77          
  78          // code unsigned char joseoninmingungunga[] = {
  79          
  80          // 5,2,4,
  81          // 3,2,3,
  82          // 2,2,1,
  83          // 1,2,2,
  84          // 3,2,2,
  85          // 5,2,4,
  86          // 6,2,2,
  87          // 1,3,2,
  88          // 2,3,3,
  89          // 1,3,1,
  90          // 5,2,8,
  91          
  92          // 6,2,4,
  93          // 1,3,3,
  94          // 6,2,1,
  95          // 5,2,2,
  96          // 6,2,2,
  97          // 3,2,4,
  98          // 6,2,3,
  99          // 5,2,1,
 100          // 3,2,2,
 101          // 5,2,2,
 102          // 2,2,8,
 103          
 104          // 5,2,4,
 105          // 3,2,3,
 106          // 2,2,1,
 107          // 1,2,2,
 108          // 3,2,2,
 109          // 5,2,4,
 110          // 6,2,2,
 111          // 1,3,2,
 112          // 2,3,3,
 113          // 2,3,1,
 114          // 2,3,8,
 115          
 116          // 1,3,3,
 117          // 2,3,1,
C51 COMPILER V9.60.7.0   MAIN                                                              03/22/2024 13:29:47 PAGE 3   

 118          // 3,3,2,
 119          // 3,3,2,
 120          // 2,3,3,
 121          // 1,3,1,
 122          // 6,2,2,
 123          // 6,2,2,
 124          // 3,2,2,
 125          // 5,2,2,
 126          // 6,2,3,
 127          // 5,2,1,
 128          // 1,3,8,
 129          
 130          // 5,2,4,
 131          // 3,3,4,
 132          // 3,3,8,
 133          
 134          // 2,3,3,
 135          // 3,3,1,
 136          // 2,3,2,
 137          // 1,3,2,
 138          // 6,2,8,
 139          
 140          // 2,3,2,
 141          // 2,3,4,
 142          // 1,3,1,
 143          // 3,3,3,
 144          // 2,3,1,
 145          // 1,3,2,
 146          // 3,3,2,
 147          // 2,3,2,
 148          // 2,3,2,
 149          // 1,3,4,
 150          // 5,2,8,
 151          
 152          // 3,2,4,
 153          // 1,3,4,
 154          // 1,3,6,
 155          // 7,2,2,
 156          // 6,2,4,
 157          // 1,3,3,
 158          // 2,3,1,
 159          // 3,3,8,
 160          
 161          // 2,3,2,
 162          // 2,3,4,
 163          // 5,2,2,
 164          // 3,3,3,
 165          // 3,3,1,
 166          // 2,3,2,
 167          // 3,3,2,
 168          // 1,3,12,
 169          // 0,2,4,
 170          
 171          // };
 172          
 173          // code unsigned char vanessa[] = {
 174          
 175          // // 5,3,2*3,
 176          // // 1,3,2*3,
 177          // // 3,3,2*3,
 178          // // 5,3,2*3,
 179          // // 4,3,2*3,
C51 COMPILER V9.60.7.0   MAIN                                                              03/22/2024 13:29:47 PAGE 4   

 180          // // 6,3,2*3,
 181          // // 7,3,2*3,
 182          // // 1,4,2*3,
 183          // // 5,3,2*3,
 184          // // 7,3,2*3,
 185          // // 1,4,2*3,
 186          // // 2,4,2*3,
 187          // // 3,4,6*3,
 188          // // 0,0,2*3,
 189          
 190          // // 3,4,2*3,
 191          // // 1,4,2*3,
 192          // // 5,3,2*3,
 193          // // 3,3,2*3,
 194          // // 4,3,2*3,
 195          // // 5,3,2*3,
 196          // // 6,3,2*3,
 197          // // 7,3,2*3,
 198          // // 5,3,2*3,
 199          // // 7,3,2*3,
 200          // // 3,4,2*3,
 201          // // 2,4,2*3,
 202          // // 3,4,6*3,
 203          // // 0,0,2*3,
 204          
 205          // // 5,3,2*3,
 206          // // 1,3,2*3,
 207          // // 3,3,2*3,
 208          // // 5,3,2*3,
 209          // // 4,3,2*3,
 210          // // 6,3,2*3,
 211          // // 7,3,2*3,
 212          // // 1,4,2*3,
 213          // // 5,3,2*3,
 214          // // 7,3,2*3,
 215          // // 1,4,2*3,
 216          // // 2,4,2*3,
 217          // // 3,4,6*3,
 218          // // 0,0,2*3,
 219          
 220          // // 3,4,4,
 221          // // 1,4,4,
 222          // // 5,3,4,
 223          // // 1,4,4,
 224          // // 5,3,4,
 225          // // 3,3,4,
 226          
 227          // // 4,3,2*3,
 228          // // 5,3,2*3,
 229          // // 6,3,2*3,
 230          // // 7,3,2*3,
 231          // // 5,3,2*3,
 232          // // 7,3,2*3,
 233          // // 3,4,2*3,
 234          // // 2,4,2*3,
 235          // // 1,4,8*3,
 236          
 237          // 5,3,2*3,
 238          // 1,3,2*3,
 239          // 3,3,2*3,
 240          // 5,3,2*3,
 241          // 4,3,2*3,
C51 COMPILER V9.60.7.0   MAIN                                                              03/22/2024 13:29:47 PAGE 5   

 242          // 6,3,2*3,
 243          // 7,3,2*3,
 244          // 1,4,2*3,
 245          // 5,3,2*3,
 246          // 7,3,2*3,
 247          // 1,4,2*3,
 248          // 2,4,2*3,
 249          // 3,4,6*3,
 250          // 0,0,2*3,
 251          
 252          // 3,4,2*3,
 253          // 1,4,2*3,
 254          // 5,3,2*3,
 255          // 3,3,2*3,
 256          // 4,3,2*3,
 257          // 5,3,2*3,
 258          // 6,3,2*3,
 259          // 7,3,2*3,
 260          // 5,3,2*3,
 261          // 7,3,2*3,
 262          // 3,4,2*3,
 263          // 2,4,2*3,
 264          // 3,4,6*3,
 265          // 0,0,2*3,
 266          
 267          // 5,3,2*3,
 268          // 1,3,2*3,
 269          // 3,3,2*3,
 270          // 5,3,2*3,
 271          // 4,3,2*3,
 272          // 6,3,2*3,
 273          // 7,3,2*3,
 274          // 1,4,2*3,
 275          // 5,3,2*3,
 276          // 7,3,2*3,
 277          // 1,4,2*3,
 278          // 2,4,2*3,
 279          // 3,4,6*3,
 280          // 0,0,2*3,
 281          
 282          // 3,4,4,
 283          // 1,4,4,
 284          // 5,3,4,
 285          // 1,4,4,
 286          // 5,3,4,
 287          // 3,3,4,
 288          
 289          // 4,3,2*3,
 290          // 5,3,2*3,
 291          // 6,3,2*3,
 292          // 7,3,2*3,
 293          // 5,3,2*3,
 294          // 7,3,2*3,
 295          // 3,4,2*3,
 296          // 2,4,2*3,
 297          // 1,4,8*3,
 298          
 299          // // 5,2,4*3,
 300          // // 3,2,2*3,
 301          // // 5,2,2*3,
 302          // // 1,3,2*3,
 303          // // 7,2,2*3,
C51 COMPILER V9.60.7.0   MAIN                                                              03/22/2024 13:29:47 PAGE 6   

 304          // // 6,2,2*3,
 305          // // 5,2,4*3,
 306          // // 1,3,1*3,
 307          // // 6,2,1*3,
 308          // // 5,2,2*3,
 309          // // 3,2,2*3,
 310          // // 6,2,2*3,
 311          // // 5,2,2*3,
 312          // // 3,2,2*3,
 313          // // 4,2,6*3,
 314          // // 2,2,2*3,
 315          // // 4,2,2*3,
 316          // // 6,2,2*3,
 317          // // 5,2,2*3,
 318          // // 2,2,2*3,
 319          // // 3,2,4*3,
 320          // // 1,2,7*3,
 321          // // 0,0,4*3,
 322          
 323          // 5,3,4*3,
 324          // 3,3,2*3,
 325          // 5,3,2*3,
 326          // 1,4,2*3,
 327          // 7,3,2*3,
 328          // 6,3,2*3,
 329          // 5,3,4*3,
 330          // 1,4,1*3,
 331          // 6,3,1*3,
 332          // 5,3,2*3,
 333          // 3,3,2*3,
 334          // 6,3,2*3,
 335          // 5,3,2*3,
 336          // 3,3,2*3,
 337          // 4,3,6*3,
 338          // 2,3,2*3,
 339          // 4,3,2*3,
 340          // 6,3,2*3,
 341          // 5,3,2*3,
 342          // 7,2,2*3,
 343          // 1,3,7*3,
 344          
 345          // 1,3,2*3,
 346          // 2,3,2*3,
 347          // 3,3,2*3,
 348          // 4,3,2*3,
 349          // 5,3,2*3,
 350          // 6,3,2*3,
 351          // 7,3,2*3,
 352          // 1,4,2*3,
 353          // 1,4,2*3,
 354          // 7,3,2*3,
 355          // 6,3,2*3,
 356          // 5,3,2*3,
 357          // 5,3,2*3,
 358          // 4,3,2*3,
 359          // 3,3,2*3,
 360          // 2,3,2*3,
 361          // };
 362          
 363          //--------------------------------------
 364          void t0int() interrupt 1 // T0中断程序，控制发音的音调
 365          {
C51 COMPILER V9.60.7.0   MAIN                                                              03/22/2024 13:29:47 PAGE 7   

 366   1          TR0 = 0;            // 先关闭T0
 367   1          speaker = !speaker; // 输出方波, 发音
 368   1          TH0 = timer0h;      // 下次的中断时间, 这个时间, 控制音调高低
 369   1          TL0 = timer0l;
 370   1          TR0 = 1; // 启动T0
 371   1      }
 372          //--------------------------------------
 373          void delay(unsigned char t) // 延时程序，控制发音的时间长度
 374          {
 375   1          unsigned char t1;
 376   1          unsigned long t2;
 377   1          for (t1 = 0; t1 < t; t1++) // 双重循环, 共延时t个半拍
 378   1              for (t2 = 0; t2 < 4000; t2++)
 379   1                  ; // 延时期间, 可进入T0中断去发音
 380   1          TR0 = 0;  // 关闭T0, 停止发音
 381   1      }
 382          
 383          void ledallon(void)
 384          {
 385   1          P0 = 0X00;
 386   1          P1 = 0X00;
 387   1          P2 = 0X00;
 388   1          P3 = P3 & 0XC0;
 389   1      }
 390          void ledalloff(void)
 391          {
 392   1          P0 = 0Xff;
 393   1          P1 = 0Xff;
 394   1          P2 = 0Xff;
 395   1          P3 = P3 | 0X3f;
 396   1      }
 397          void ledon(unsigned char i)
 398          {
 399   1          switch (i)
 400   1          {
 401   2          case 1:
 402   2              P0 = P0 & 0x7f;
 403   2              break;
 404   2          case 2:
 405   2              P0 = P0 & 0xbf;
 406   2              break;
 407   2          case 3:
 408   2              P0 = P0 & 0xdf;
 409   2              break;
 410   2          case 4:
 411   2              P0 = P0 & 0xef;
 412   2              break;
 413   2          case 5:
 414   2              P0 = P0 & 0xf7;
 415   2              break;
 416   2          case 6:
 417   2              P0 = P0 & 0xfb;
 418   2              break;
 419   2          case 7:
 420   2              P0 = P0 & 0xfd;
 421   2              break;
 422   2          case 8:
 423   2              P0 = P0 & 0xfe;
 424   2              break; //
 425   2          case 9:
 426   2              P1 = P1 & 0xfe;
 427   2              break;
C51 COMPILER V9.60.7.0   MAIN                                                              03/22/2024 13:29:47 PAGE 8   

 428   2          case 10:
 429   2              P1 = P1 & 0xfd;
 430   2              break;
 431   2          case 11:
 432   2              P1 = P1 & 0xfb;
 433   2              break;
 434   2          case 12:
 435   2              P1 = P1 & 0xf7;
 436   2              break;
 437   2          case 13:
 438   2              P1 = P1 & 0xef;
 439   2              break;
 440   2          case 14:
 441   2              P1 = P1 & 0xdf;
 442   2              break;
 443   2          case 15:
 444   2              P1 = P1 & 0xbf;
 445   2              break;
 446   2          case 16:
 447   2              P1 = P1 & 0x7f;
 448   2              break; //
 449   2          case 17:
 450   2              P3 = P3 & 0xfe;
 451   2              break;
 452   2          case 18:
 453   2              P3 = P3 & 0xfd;
 454   2              break;
 455   2          case 19:
 456   2              P3 = P3 & 0xfb;
 457   2              break;
 458   2          case 20:
 459   2              P3 = P3 & 0xf7;
 460   2              break;
 461   2          case 21:
 462   2              P3 = P3 & 0xef;
 463   2              break;
 464   2          case 22:
 465   2              P3 = P3 & 0xdf;
 466   2              break;
 467   2          case 23:
 468   2              P2 = P2 & 0xfe;
 469   2              break;
 470   2          case 24:
 471   2              P2 = P2 & 0xfd;
 472   2              break;
 473   2          case 25:
 474   2              P2 = P2 & 0xfb;
 475   2              break;
 476   2          case 26:
 477   2              P2 = P2 & 0xf7;
 478   2              break;
 479   2          case 27:
 480   2              P2 = P2 & 0xef;
 481   2              break;
 482   2          case 28:
 483   2              P2 = P2 & 0xdf;
 484   2              break;
 485   2          case 29:
 486   2              P2 = P2 & 0xbf;
 487   2              break;
 488   2          case 30:
 489   2              P2 = P2 & 0x7f;
C51 COMPILER V9.60.7.0   MAIN                                                              03/22/2024 13:29:47 PAGE 9   

 490   2              break;
 491   2          default:
 492   2              break;
 493   2          }
 494   1      }
 495          void ledoff(unsigned char i)
 496          {
 497   1          switch (i)
 498   1          {
 499   2          case 1:
 500   2              P0 = P0 | 0x80;
 501   2              break;
 502   2          case 2:
 503   2              P0 = P0 | 0x40;
 504   2              break;
 505   2          case 3:
 506   2              P0 = P0 | 0x20;
 507   2              break;
 508   2          case 4:
 509   2              P0 = P0 | 0x10;
 510   2              break;
 511   2          case 5:
 512   2              P0 = P0 | 0x08;
 513   2              break;
 514   2          case 6:
 515   2              P0 = P0 | 0x04;
 516   2              break;
 517   2          case 7:
 518   2              P0 = P0 | 0x02;
 519   2              break;
 520   2          case 8:
 521   2              P0 = P0 | 0x01;
 522   2              break; //
 523   2          case 9:
 524   2              P1 = P1 | 0x01;
 525   2              break;
 526   2          case 10:
 527   2              P1 = P1 | 0x02;
 528   2              break;
 529   2          case 11:
 530   2              P1 = P1 | 0x04;
 531   2              break;
 532   2          case 12:
 533   2              P1 = P1 | 0x08;
 534   2              break;
 535   2          case 13:
 536   2              P1 = P1 | 0x10;
 537   2              break;
 538   2          case 14:
 539   2              P1 = P1 | 0x20;
 540   2              break;
 541   2          case 15:
 542   2              P1 = P1 | 0x40;
 543   2              break;
 544   2          case 16:
 545   2              P1 = P1 | 0x80;
 546   2              break; //
 547   2          case 17:
 548   2              P3 = P3 | 0x01;
 549   2              break;
 550   2          case 18:
 551   2              P3 = P3 | 0x02;
C51 COMPILER V9.60.7.0   MAIN                                                              03/22/2024 13:29:47 PAGE 10  

 552   2              break;
 553   2          case 19:
 554   2              P3 = P3 | 0x04;
 555   2              break;
 556   2          case 20:
 557   2              P3 = P3 | 0x08;
 558   2              break;
 559   2          case 21:
 560   2              P3 = P3 | 0x10;
 561   2              break;
 562   2          case 22:
 563   2              P3 = P3 | 0x20;
 564   2              break;
 565   2          case 23:
 566   2              P2 = P2 | 0x01;
 567   2              break;
 568   2          case 24:
 569   2              P2 = P2 | 0x02;
 570   2              break;
 571   2          case 25:
 572   2              P2 = P2 | 0x04;
 573   2              break;
 574   2          case 26:
 575   2              P2 = P2 | 0x08;
 576   2              break;
 577   2          case 27:
 578   2              P2 = P2 | 0x10;
 579   2              break;
 580   2          case 28:
 581   2              P2 = P2 | 0x20;
 582   2              break;
 583   2          case 29:
 584   2              P2 = P2 | 0x40;
 585   2              break;
 586   2          case 30:
 587   2              P2 = P2 | 0x80;
 588   2              break;
 589   2          default:
 590   2              break;
 591   2          }
 592   1      }
 593          void ledpoweron(void)
 594          {
 595   1          P3_7 = 0;
 596   1      }
 597          void ledpoweroff(void)
 598          {
 599   1          P3_7 = 1;
 600   1      }
 601          //--------------------------------------
 602          void song() // 演奏一个音符
 603          {
 604   1          TH0 = timer0h; // 控制音调
 605   1          TL0 = timer0l;
 606   1          TR0 = 1;     // 启动T0, 由T0输出方波去发音
 607   1          delay(time); // 控制时间长度
 608   1      }
 609          //--------------------------------------
 610          void main(void)
 611          {
 612   1          unsigned char k, i;
 613   1          unsigned int q=1;
C51 COMPILER V9.60.7.0   MAIN                                                              03/22/2024 13:29:47 PAGE 11  

 614   1          TMOD = 1; // 置T0定时工作方式1
 615   1          ET0 = 1;  // 开T0中断
 616   1          EA = 1;   // 开CPU中断
 617   1          ledpoweroff();
 618   1          ledpoweron();
 619   1          ledalloff();
 620   1          while (1)
 621   1          {
 622   2              i = 0;
 623   2              time = 1;
 624   2              while (time)
 625   2              {
 626   3                  ledon(q % 30 + 1);
 627   3                  k = east_red[i] + 7 * (east_red[i + 1] - 1) - 1;
 628   3                  // 第i个是音符, 第i+1个是第几个八度
 629   3                  timer0h = FREQH[k];     // 从数据表中读出频率数值
 630   3                  timer0l = FREQL[k];     // 实际上, 是定时的时间长度
 631   3                  time = east_red[i + 2]; // 读出时间长度数值
 632   3                  if (east_red[i] == 0)
 633   3                      delay(time); // 如果是休止符, 则延时
 634   3                  else             // 否则, 发出一个音符
 635   3                      song();      // 发出一个音符
 636   3                  i += 3;
 637   3                  q+=2;
 638   3                  if (i > sizeof(east_red))
 639   3                      i = 0;
 640   3                  ledalloff();
 641   3              }
 642   2          }
 643   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    733    ----
   CONSTANT SIZE    =    173    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      3       9
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
