C51 COMPILER V9.60.7.0   MAIN                                                              04/03/2024 08:11:11 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include <AT89X52.H>
   2          #define  uint  unsigned int  //∂®“Â“ªœ¬∑Ω±„±‡≥Ã
   3          #define  uchar unsigned char //∂®“Â“ªœ¬∑Ω±„±‡≥Ã
   4          #define  keystart       P1_0 //∂®“Â≤‚¡øø™ º∆Ù∂Ø∞¥≈•ø⁄
   5          #define  SOUND_RESET    P1_6 //∂®“Â”Ô“Ù–æ∆¨∏¥Œªø⁄
   6          #define  SOUND_DATA     P1_5 //∂®“Â”Ô“Ù–æ∆¨ ˝æ›ø⁄
   7          #define  SOUND_BUSY     P1_4 //∂®“Â”Ô“Ù–æ∆¨√¶¬µø⁄
   8          #define  ledtest        P3_4     //∂®“Â≤‚¡ø÷∏ æµ∆øÿ÷∆ø⁄------------ ‰≥ˆ1µÁ∆Ωµ∆≤ª¡¡£¨ ‰≥ˆ0µÁ∆Ωµ∆¡¡         
   9          #define  signal         P2_0     //∂®“Â–ƒÃ¯–≈∫≈ ‰»Îø⁄--------------∏˘æ›–ƒÃ¯–≈∫≈µÁ∆Ω∏ﬂµÕ±‰ªØ
  10          #define  keymodel       P1_3     //∂®“Â≤‚¡øƒ£ Ω…Ë÷√∞¥º¸ ‰»Îø⁄------∞¥œ¬ ‰»Î0µÁ∆Ω£¨À…ø™ ‰»Î1µÁ∆Ω
  11          #define  ledmodle       P1_7     //∂®“Âπ§◊˜ƒ£ Ω÷∏ æµ∆øÿ÷∆ø⁄-------- ‰≥ˆ1µÁ∆Ωµ∆≤ª¡¡£¨ ‰≥ˆ0µÁ∆Ωµ∆¡¡£¨”√¿¥÷∏ æ≤
             -‚¡øƒ£ Ω  
  12          #define  baiwei         P2_1     //∂®“Â∞ŸŒª«˝∂Øø⁄------------------∞ŸŒª ˝¬Îπ‹ ‰≥ˆøÿ÷∆∂À£¨ ‰≥ˆ0µÁ∆Ω∂‘”¶µƒ∞ŸŒª
             -µ„¡¡£¨ ‰≥ˆ1µÁ∆Ω∂‘”¶µƒ∞ŸŒª≤ª¡¡
  13          #define  shiwei         P2_4     //∂®“Â ÆŒª«˝∂Øø⁄------------------ ÆŒª ˝¬Îπ‹ ‰≥ˆøÿ÷∆∂À£¨ ‰≥ˆ0µÁ∆Ω∂‘”¶µƒ ÆŒª
             -µ„¡¡£¨ ‰≥ˆ1µÁ∆Ω∂‘”¶µƒ ÆŒª≤ª¡¡
  14          #define  gewei          P2_7     //∂®“Â∏ˆŒª«˝∂Øø⁄------------------∏ˆŒª ˝¬Îπ‹ ‰≥ˆøÿ÷∆∂À£¨ ‰≥ˆ0µÁ∆Ω∂‘”¶µƒ∏ˆŒª
             -µ„¡¡£¨ ‰≥ˆ1µÁ∆Ω∂‘”¶µƒ∏ˆŒª≤ª¡¡
  15          uint     heartrate=888;         
  16          uchar    ge,shi,bai;      
  17          int calu_flag = 0;
  18          int time = 0;
  19          int num = 0;
  20          uint  i=0;                
  21          uchar display_period=5;   
  22          int speak_flag = 0;
  23          int flag = 0;
  24          int model = 1;
  25          int judge = 0;
  26          int clear = 1;
  27          int key_up1 = 1;
  28          int key_up2 = 1;
  29          int k = -1;
  30          int open_task = 0;
  31          int one_task = 0;
  32          int two_task = 0;
  33          int open = 1;
  34          int task = 0;
  35          int one_heartrate = 0;
  36          int two_heartrate = 0;
  37          int stop_flag = 0;
  38          int task_speak_flag = 0;
  39          int task2_speak_flag = 0;
  40          int time_record = 0;
  41          int last_task = 0;
  42          int task5 = 0;
  43          int j = 0;
  44          int task4 = 0;
  45          code uchar datab[10]={0xa0,0xaf,0x98,0x8a,0x87,0xc2,0xc0,0xae,0x80,0x86};
  46          //                      0    1    2    3    4    5    6    7    8    9 
  47          code uchar datab1[10]={0x20,0x2f,0x18,0x0a,0x07,0x42,0x40,0x2e,0x00,0x06};
  48          //                      0    1    2    3    4    5    6    7    8    9 
  49          code uchar my_xuehao[10] = {2,2,0,1,4,0,0,2,1,6};
  50          void delay1ms(uint count);        //∫¡√Îº∂—” ±£®≤ª «∫‹◊º£©   
  51          void sound_reset(void);       //∏¥Œª”Ô“Ù–æ∆¨
C51 COMPILER V9.60.7.0   MAIN                                                              04/03/2024 08:11:11 PAGE 2   

  52          void speek(unsigned char num);    //≤•±®µÿ÷∑∂‘”¶µƒ…˘“Ù
  53          void speekone(void);        //≤•±®“ª…˘°∞∂£°±
  54          void speekheartrate(void);        //≤•±®–ƒ¬ ÷µ
  55          void mcuint(void);        //µ•∆¨ª˙≥ı ºªØ∫Ø ˝
  56          void measure_slow(void);
  57          void measure_fast(void);
  58          void display_sound(void);
  59          void display_id(void)
  60          {
  61   1        if(j>=3)
  62   1        {
  63   2          heartrate = heartrate%100;
  64   2        }
  65   1        heartrate = my_xuehao[j]+heartrate*10;
  66   1        speek(my_xuehao[j]);
  67   1        j++;
  68   1        delay1ms(100);
  69   1      }
  70          void key_scan(void)
  71          {
  72   1        if(keymodel==0 && key_up1==1)
  73   1        {
  74   2          delay1ms(10);
  75   2          key_up1=0;
  76   2          if(keymodel==0)   
  77   2          {
  78   3            ledmodle=!ledmodle;
  79   3            heartrate = 0;
  80   3            task += 1;
  81   3            one_task = 0;
  82   3            ledtest = 1;  
  83   3            if(task == 7)
  84   3            {
  85   4              task = 2;
  86   4              stop_flag = 0;
  87   4              two_heartrate = 0;
  88   4              one_heartrate = 0;
  89   4              heartrate = 0;
  90   4              task_speak_flag = 0;
  91   4              task2_speak_flag = 0;
  92   4              open = 1;
  93   4              task4 = 0;
  94   4            }
  95   3          }
  96   2        }
  97   1        else if(keymodel==1)  key_up1=1;
  98   1      }
  99          
 100          void key1_scan(void)
 101          {
 102   1        if(keystart==0 && key_up2==1)
 103   1        {
 104   2          delay1ms(10);
 105   2          key_up2=0;
 106   2          if(keystart==0)   
 107   2          {
 108   3            heartrate = 0;
 109   3            open = open * k;
 110   3          }
 111   2        }
 112   1        else if(keystart==1)  key_up2=1;
 113   1      }
C51 COMPILER V9.60.7.0   MAIN                                                              04/03/2024 08:11:11 PAGE 3   

 114          void main(void)
 115          { 
 116   1        display_sound();
 117   1        mcuint();
 118   1        while(1)
 119   1        {
 120   2          key_scan();
 121   2          switch (task)
 122   2          {
 123   3            case 0: 
 124   3                if(open_task == 0)
 125   3                  {
 126   4                    speek(26);
 127   4                    open_task = 1;
 128   4                  }
 129   3                if(two_task == 0 && open_task ==1)
 130   3                 {
 131   4                    delay1ms(600);
 132   4                    heartrate=0; 
 133   4                    two_task=1;
 134   4                 }
 135   3                 if(two_task == 1 && open_task ==1)
 136   3                 {
 137   4                    display_id();
 138   4                 }
 139   3                 if(j >=10)
 140   3                 {
 141   4                    task = 1;
 142   4                    heartrate = 0;
 143   4                    i = 0;
 144   4                 }
 145   3                 break;
 146   3                    
 147   3            case 2: 
 148   3                  measure_slow();
 149   3                  if(flag == 1 && speak_flag == 0)
 150   3                  {
 151   4                    speekheartrate();
 152   4                    speak_flag = 1;
 153   4                  }
 154   3                  break;
 155   3            case 3: 
 156   3                  measure_fast();
 157   3                  if(flag == 1 && speak_flag == 0)
 158   3                  {
 159   4                    speekheartrate();
 160   4                    speak_flag = 1;
 161   4                  }
 162   3                  break;            
 163   3            case 4: 
 164   3                  if(task4 == 0)
 165   3                  {
 166   4                    open = 1;
 167   4                    task4 = 1;
 168   4                    heartrate = 0;
 169   4                    TR1 = 1;
 170   4                  }
 171   3                  key1_scan();
 172   3                  if(open == -1)
 173   3                  {
 174   4                    ledtest=0;  //µ„¡¡≤‚¡ø÷∏ æµ∆
 175   4                    time_record = 1;
C51 COMPILER V9.60.7.0   MAIN                                                              04/03/2024 08:11:11 PAGE 4   

 176   4                  }
 177   3                  if(open == -1 && task_speak_flag == 0)
 178   3                  {
 179   4                    speekone();
 180   4                    task_speak_flag = 1;
 181   4                  }
 182   3                  if(open == 1)
 183   3                  {
 184   4                    task_speak_flag = 0;
 185   4                    time_record = 0;
 186   4                    heartrate = 0;
 187   4                  }
 188   3                  if(heartrate >= 999)
 189   3                  {
 190   4                    heartrate = 0;
 191   4                  }
 192   3                  break;  
 193   3            case 5: //+
 194   3                  if(signal == 1 && calu_flag == 0)
 195   3                  {
 196   4                    one_heartrate++;
 197   4                    heartrate = one_heartrate;
 198   4                    calu_flag = 1;
 199   4                  }
 200   3                  if(signal == 0 && calu_flag == 1)
 201   3                  {
 202   4                    calu_flag = 0;
 203   4                  }
 204   3                  break;  
 205   3            case 6: //+
 206   3                  if(signal == 1 && calu_flag == 0 && stop_flag == 0)
 207   3                  {
 208   4                    two_heartrate++;
 209   4                    heartrate = two_heartrate;
 210   4                    calu_flag = 1;
 211   4                  }
 212   3                  if(signal == 0 && calu_flag == 1)
 213   3                  {
 214   4                    calu_flag = 0;
 215   4                  }
 216   3                  key1_scan();
 217   3                  if(open == -1)
 218   3                  {
 219   4                    ledtest=0;  //µ„¡¡≤‚¡ø÷∏ æµ∆
 220   4                    stop_flag = 1;
 221   4                    if(task2_speak_flag == 0)
 222   4                    {
 223   5                      heartrate = two_heartrate+one_heartrate;
 224   5                      speekone();
 225   5                      speekheartrate();
 226   5                      task2_speak_flag = 1;
 227   5                    }
 228   4                  }
 229   3                  break;  
 230   3          }
 231   2        }
 232   1      }
 233          
 234          void mcuint(void)
 235           {
 236   1          P0=0xFF;                            // πµ•∆¨ª˙…œµÁ∫ÛP0ø⁄∂º ‰≥ˆ1
 237   1          P1=0xFF;                            // πµ•∆¨ª˙…œµÁ∫ÛP1ø⁄∂º ‰≥ˆ1
C51 COMPILER V9.60.7.0   MAIN                                                              04/03/2024 08:11:11 PAGE 5   

 238   1          P2=0xFF;                      // πµ•∆¨ª˙…œµÁ∫ÛP2ø⁄∂º ‰≥ˆ1
 239   1          P3=0xFF;                    // πµ•∆¨ª˙…œµÁ∫ÛP3ø⁄∂º ‰≥ˆ1
 240   1          TMOD=0x11;                      //…Ë∂®∂® ±∆˜T0°¢T1µƒπ§◊˜ƒ£ ΩŒ™16Œª∂® ±∆˜
 241   1          TL0=(65536-display_period*500)%256; //…Ë∂®∂® ±∆˜T0µƒµÕ8Œª≥ı÷µ---T0”√”⁄À¢–¬ ˝¬Îπ‹œ‘ æ
 242   1          TH0=(65536-display_period*500)/256; //…Ë∂®∂® ±∆˜T0µƒ∏ﬂ8Œª≥ı÷µ---T0”√”⁄À¢–¬ ˝¬Îπ‹œ‘ æ
 243   1          TL1=(65536-100*500)%256;          //…Ë∂®∂® ±∆˜T1µƒµÕ8Œª≥ı÷µ---100Œ™100∫¡√Î£¨1¥Œº∆ ±100∫¡√Î£¨600¥ŒæÕ «1∑
             -÷÷”
 244   1          TH1=(65536-100*500)/256;          //…Ë∂®∂® ±∆˜T1µƒ∏ﬂ8Œª≥ı÷µ
 245   1          IE=0x8A;                    //ø™◊‹÷–∂œ°¢∂® ±∆˜T0÷–∂œ°¢∂® ±∆˜T1÷–∂œ
 246   1          IP=0x08;                    //…Ë∂®÷–∂œ”≈œ»º∂£¨∂® ±∆˜T1÷–∂œ”≈œ»
 247   1          TR0=1;                      //ø™∆Ù∂® ±∆˜T0£¨ ˝¬Îπ‹ø™ º∂® ±À¢–¬œ‘ æ
 248   1          TR1=1;
 249   1       }
 250          
 251          void delay1ms(uint count)
 252          { 
 253   1           int m,n;
 254   1           for(m=0;m<count;m++)
 255   1           for(n=0;n<59;n++);
 256   1      }
 257          
 258          void timer0() interrupt 1
 259           {
 260   1          TL0=0x3C;
 261   1          TH0=0xF6;
 262   1          ge=heartrate%10;
 263   1          bai=heartrate/100;      
 264   1          shi=(heartrate/10)%10;   
 265   1          if(task == 4)
 266   1          {
 267   2            P0=datab[ge];   
 268   2            gewei=0;            
 269   2            delay1ms(1);
 270   2            gewei=1;    
 271   2      
 272   2            P0=datab1[shi];   
 273   2            shiwei=0;          
 274   2            delay1ms(1);
 275   2            shiwei=1;     
 276   2           
 277   2            P0=datab[bai];    
 278   2            baiwei=0;            
 279   2            delay1ms(1);
 280   2            baiwei=1;   
 281   2          }
 282   1          if(task == 5 || task == 6)
 283   1          {
 284   2            P0=datab[ge];   
 285   2            gewei=0;            
 286   2            delay1ms(1);
 287   2            gewei=1;    
 288   2      
 289   2            P0=datab[shi];    
 290   2            shiwei=0;          
 291   2            delay1ms(1);
 292   2            shiwei=1;     
 293   2           
 294   2            P0=0xfe;    
 295   2            baiwei=0;            
 296   2            delay1ms(1);
 297   2            baiwei=1; 
 298   2          }
C51 COMPILER V9.60.7.0   MAIN                                                              04/03/2024 08:11:11 PAGE 6   

 299   1          if(task != 5 && task != 6 && task != 4)
 300   1          {
 301   2            P0=datab[ge];   
 302   2            gewei=0;            
 303   2            delay1ms(1);
 304   2            gewei=1;    
 305   2      
 306   2            P0=datab[shi];    
 307   2            shiwei=0;          
 308   2            delay1ms(1);
 309   2            shiwei=1;     
 310   2           
 311   2            P0=datab[bai];    
 312   2            baiwei=0;            
 313   2            delay1ms(1);
 314   2            baiwei=1;   
 315   2          }
 316   1        
 317   1       } 
 318           
 319          void timer1() interrupt 3
 320          {
 321   1        if(open == -1 && time_record == 1)
 322   1        {
 323   2          time++;
 324   2          heartrate++;
 325   2        }
 326   1        if(one_task == 1)
 327   1        {
 328   2          i++;
 329   2          if(signal == 1 && judge == 0 && flag == 0 && task == 2)
 330   2          {
 331   3            heartrate++;
 332   3            judge = 1;
 333   3          }
 334   2          if(signal == 1 && judge == 0 && flag == 0 && task == 3)
 335   2          {
 336   3            heartrate += 6;
 337   3            judge = 1;
 338   3          }
 339   2          if(signal == 1 && judge == 0 && flag == 0 && task != 3 && task != 2)
 340   2          {
 341   3            heartrate += 6;
 342   3            judge = 1;
 343   3          }
 344   2          if(signal == 0 && judge == 1 && flag == 0)
 345   2          {
 346   3            judge = 0;
 347   3          }
 348   2          if(flag == 1)
 349   2          {
 350   3            TR1 = 0;
 351   3            ledtest=1;  
 352   3            one_task = 0;
 353   3          }
 354   2          if(i==600 && task == 2)      
 355   2          {
 356   3           i=0;             
 357   3           flag=1;        
 358   3          }       
 359   2          if(i==40 && task == 3)      
 360   2          {
C51 COMPILER V9.60.7.0   MAIN                                                              04/03/2024 08:11:11 PAGE 7   

 361   3           i=0;             
 362   3           flag=1;        
 363   3          } 
 364   2        }
 365   1        
 366   1      }
 367              
 368          void measure_slow(void)
 369          {
 370   1        if(keystart ==0 )
 371   1        {
 372   2          flag = 0;
 373   2          TL1=0xB0;
 374   2          TH1=0x3C;
 375   2          ledtest=0;  //µ„¡¡≤‚¡ø÷∏ æµ∆
 376   2          speak_flag = 0;
 377   2          one_task = 1;
 378   2          TR1 = 1;
 379   2        }    
 380   1      }
 381          void measure_fast(void)
 382          {
 383   1        if(keystart==0)
 384   1        {
 385   2          flag = 0;
 386   2          ledtest=0;  //µ„¡¡≤‚¡ø÷∏ æµ∆
 387   2          speak_flag = 0;
 388   2          one_task = 1;
 389   2          TR1 = 1;
 390   2        }  
 391   1      }
 392          void sound_reset(void)
 393          {
 394   1         SOUND_RESET=1;
 395   1         delay1ms(2);
 396   1         SOUND_RESET=0;
 397   1         delay1ms(2);
 398   1      }
 399          
 400          void speek(unsigned char num)
 401          {
 402   1        unsigned char i=0;
 403   1        while(SOUND_BUSY==0);
 404   1        sound_reset();
 405   1        if((num>=0)&&(num<=9))
 406   1        {
 407   2          for(i=0;i<num+2;i++)
 408   2          {
 409   3            SOUND_DATA=1;
 410   3            delay1ms(1);
 411   3            SOUND_DATA=0;
 412   3            delay1ms(1);
 413   3          }
 414   2        }
 415   1        else
 416   1        {
 417   2          for(i=0;i<num;i++)
 418   2          {
 419   3            SOUND_DATA=1;
 420   3            delay1ms(1);
 421   3            SOUND_DATA=0;
 422   3            delay1ms(1);
C51 COMPILER V9.60.7.0   MAIN                                                              04/03/2024 08:11:11 PAGE 8   

 423   3          }
 424   2        }
 425   1      }
 426          
 427          void speekone(void)
 428          {
 429   1        while(SOUND_BUSY==0);
 430   1        speek(33);
 431   1      }
 432          
 433          void speekheartrate(void)
 434          {
 435   1        speek(bai);
 436   1        delay1ms(100); 
 437   1        speek(shi);
 438   1        delay1ms(100);
 439   1        speek(ge);
 440   1        delay1ms(100);
 441   1      }
 442          void display_sound(void)
 443          { 
 444   1        P0=0x00;
 445   1        gewei=0;
 446   1        shiwei=0;
 447   1        baiwei=0;
 448   1        speek(26);   //∂£∂£ﬂÀﬂÀ
 449   1        speek(28);   //ΩÒÃÏ «
 450   1        gewei=1;
 451   1        shiwei=1;
 452   1        baiwei=1;
 453   1        speek(2);    //2
 454   1        for(i=0;i<250;i++)
 455   1        {
 456   2          P0=datab[2];
 457   2          gewei=0;
 458   2          delay1ms(1);
 459   2          gewei=1;
 460   2        }
 461   1        speek(0);    //0
 462   1        for(i=0;i<250;i++)
 463   1        {
 464   2          P0=datab[0];
 465   2        gewei=0;
 466   2        delay1ms(1);
 467   2        gewei=1;
 468   2      
 469   2        P0=datab[2];
 470   2        shiwei=0;
 471   2        delay1ms(1);
 472   2        shiwei=1;
 473   2        }
 474   1        speek(2);    //2
 475   1         for(i=0;i<250;i++)
 476   1        {
 477   2          P0=datab[2];
 478   2        gewei=0;
 479   2        delay1ms(1);
 480   2        gewei=1;
 481   2      
 482   2        P0=datab[0];
 483   2        shiwei=0;
 484   2        delay1ms(1);
C51 COMPILER V9.60.7.0   MAIN                                                              04/03/2024 08:11:11 PAGE 9   

 485   2        shiwei=1;
 486   2      
 487   2        P0=datab[2];
 488   2        baiwei=0;
 489   2        delay1ms(1);
 490   2        baiwei=1;
 491   2        }
 492   1        speek(4);    //4
 493   1         for(i=0;i<250;i++)
 494   1        {
 495   2          P0=datab[4];
 496   2        gewei=0;
 497   2        delay1ms(1);
 498   2        gewei=1;
 499   2      
 500   2        P0=datab[2];
 501   2        shiwei=0;
 502   2        delay1ms(1);
 503   2        shiwei=1;
 504   2      
 505   2        P0=datab[0];
 506   2        baiwei=0;
 507   2        delay1ms(1);
 508   2        baiwei=1;
 509   2        }
 510   1        speek(17);   //ƒÍ
 511   1        speek(4);    //4
 512   1        for(i=0;i<250;i++)
 513   1        {
 514   2          P0=0x07;
 515   2        gewei=0;
 516   2        delay1ms(1);
 517   2        gewei=1;
 518   2        }
 519   1        speek(18);   //‘¬
 520   1        speek(2);    //2
 521   1         for(i=0;i<250;i++)
 522   1        {
 523   2          P0=datab[2];
 524   2        gewei=0;
 525   2        delay1ms(1);
 526   2        gewei=1;
 527   2      
 528   2        P0=0x07;
 529   2        shiwei=0;
 530   2        delay1ms(1);
 531   2        shiwei=1;
 532   2        }
 533   1        speek(19);   //»’
 534   1        speek(20);   //–«∆⁄
 535   1        speek(2);    //2
 536   1        speek(23);   //œ÷‘⁄ ±øÃ±±æ© ±º‰
 537   1        speek(29);   //…œŒÁ
 538   1        speek(9);    //9
 539   1        for(i=0;i<250;i++)
 540   1        {
 541   2          P0=0x02;
 542   2        gewei=0;
 543   2        delay1ms(1);
 544   2        gewei=1;
 545   2        }
 546   1        speek(14);   //µ„
C51 COMPILER V9.60.7.0   MAIN                                                              04/03/2024 08:11:11 PAGE 10  

 547   1        speek(3);    //3
 548   1         for(i=0;i<250;i++)
 549   1        {
 550   2          P0=datab[3];
 551   2        gewei=0;
 552   2        delay1ms(1);
 553   2        gewei=1;
 554   2      
 555   2        P0=0x02;
 556   2        shiwei=0;
 557   2        delay1ms(1);
 558   2        shiwei=1;
 559   2        }
 560   1        speek(12);   // Æ
 561   1        for(i=0;i<250;i++)
 562   1        {
 563   2          P0=datab[0];
 564   2        gewei=0;
 565   2        delay1ms(1);
 566   2        gewei=1;
 567   2      
 568   2        P0=datab[3];
 569   2        shiwei=0;
 570   2        delay1ms(1);
 571   2        shiwei=1;
 572   2      
 573   2        P0=0x02;
 574   2        baiwei=0;
 575   2        delay1ms(1);
 576   2        baiwei=1;
 577   2        }
 578   1        speek(15);   //∑÷
 579   1        for(i=0;i<500;i++)
 580   1        {
 581   2          P0=datab[0];
 582   2        gewei=0;
 583   2        delay1ms(1);
 584   2        gewei=1;
 585   2      
 586   2        P0=datab[3];
 587   2        shiwei=0;
 588   2        delay1ms(1);
 589   2        shiwei=1;
 590   2      
 591   2        P0=0x02;
 592   2        baiwei=0;
 593   2        delay1ms(1);
 594   2        baiwei=1;
 595   2        }
 596   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   2154    ----
   CONSTANT SIZE    =     30    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     60       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
